
-- NOTA: LAS FECHAS SE CORREN ENTRE COMILLAS, LO DEMAS , ASI NOMAS


-- PROYECCIONES
-- --------------------------------------------------------------------------------------
-- --------------------------------------------------------------------------------------
-- --------------------------------------------------------------------------------------
-- OBTIENE EL TIPO DE CAMBIO EN LA FECHA ESPECIFICADA
-- ES LLAMADO POR LOS OTROS SP Y NO SE REQUIERE EJECUCION DIRECTA
IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'SP_OBTENERTC')
DROP PROCEDURE SP_OBTENERTC
GO
CREATE PROCEDURE SP_OBTENERTC
	@PFECHA DATE,
	@PRESULTADO NUMERIC OUTPUT
AS
begin
	SET NOCOUNT ON;
	-- OBTENER EL TIPO DE CAMBIO DE LA TABLA DE TIPOS DE CAMBIO
    -- HACIENDO USO DE LA FECHA
    SELECT 
      @PRESULTADO = TC.MONTO
    FROM T_TIPOCAMBIOS TC
    WHERE CAST(TC.FECHA AS DATE) = CAST(@PFECHA AS DATE);
    PRINT(@PRESULTADO);
end
GO

-- PROYECTA EL TIPO DE CAMBIO PARA EL MES SIGUIENTE DE
-- LA FECHA ESPECIFICADA TOMANDO EN CUENTA LAS DIFERENCIAS DE
-- LOS TIPOS DE CAMBIO EN LOS MESES ESPCIFICADOS (NUMERO DE VALORES REALES)
-- ES LLAMADO POR OTROS SP Y NO SE REQUIERE EJECUCION DIRECTA
IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'SP_PROYECCIONTC1MES')
DROP PROCEDURE SP_PROYECCIONTC1MES
GO
CREATE PROCEDURE SP_PROYECCIONTC1MES
	@PNUMVALREALES NUMERIC,		-- CANTIDAD DE MESES QUE SE TOMAN EN CUENTA PARA PROYECTAR EL TC
	@PDATE DATE,				-- FECHA DEL MES A PARTIR DEL CUAL SE QUIERE CALCULAR EL TC
	-- SOLO SON NECESARIOS PARA EL INSERT DE LA TABLA
	@PDESCMONEDA1 VARCHAR(10),
	@PDESCMONEDA2 VARCHAR(10),
	@PNEXTTC NUMERIC OUTPUT
AS
	DECLARE @CURTC NUMERIC(17,2);     -- VALOR DEL TC DE LA FECHA (DIA)
	DECLARE @TC0 NUMERIC(17,2);       -- VARIABLE DE CONTROL DE MONTO DE TIPO DE CAMBIO (MININUENDO)
	DECLARE @TC1 NUMERIC(17,2);       -- VARIABLE DE CONTROL DE MONTO DE TIPO DE CAMBIO (SUSTRAENDO)
	DECLARE @DIFF NUMERIC(17,2);      -- VARIABLE DE CONTROL DE MONTO (DIFERENCIA ENTRE MONTOS DE 2 MESES CONSECUTIVOS)
	DECLARE @NEWFECHA DATE;          -- NUEVA FECHA DE DONDE OBTENER EL MONTO DEL TIPO DE CAMBIO
	DECLARE @CONTA NUMERIC(10);       -- CONTROL DEL BUCLE
BEGIN
	SET NOCOUNT ON;
	-- INICIALIZA VARIABLES
	SET @TC0 = 0.0;
	SET @TC1 = 0.0;
	SET @DIFF = 0.0;
	SET @CONTA = 0;
	-- OBTENER EL TIPO DE CAMBIO DEL MES
	EXEC SP_OBTENERTC @PDATE, @CURTC OUTPUT;
	-- BUCLE DE RECORRIDO EN LA TABLA TC SEGUN EL NUMERO DE VALORES REALES
	WHILE (@CONTA < @PNUMVALREALES)
	BEGIN
		-- OBTIENE EL TIPO DE CAMBIO DEL MES ANTERIOR
		SELECT @NEWFECHA = DATEADD(MONTH, -@CONTA, @PDATE);
		EXEC SP_OBTENERTC @NEWFECHA, @TC0 OUTPUT;
		-- OBTIENE EL TIPO DE CAMBIO DEL MES ANTERIOR
		SELECT @NEWFECHA = DATEADD(MONTH, -(@CONTA+1), @PDATE);
		EXEC SP_OBTENERTC @NEWFECHA, @TC1 OUTPUT;
		-- CALCULA DIFERENCIAS
		SET @DIFF = @DIFF + (@TC0 - @TC1);
		SET @CONTA = @CONTA + 1;
	END
	-- CALCULA EL PROMEDIO
	SET @DIFF = (@DIFF / @PNUMVALREALES);
	-- CALCULA EL NUEVO TIPO DE CAMBIO 
	SET @PNEXTTC = (@CURTC + @DIFF);
	-- INCREMENTA LA FECHA EN 1 MES
	SELECT @NEWFECHA = DATEADD(MONTH, 1, @PDATE);
	-- INSERTAR EN LA TABLA DE TIPOS DE CAMBIO
	INSERT INTO T_TIPOCAMBIOS(CODMONEDA1, CODMONEDA2, MONTO, CODINDICEECONOMICO, ESTADO, FECHA) VALUES (
		(SELECT CODIGO FROM T_MONEDAS WHERE NOMBRE = @PDESCMONEDA1),
		(SELECT CODIGO FROM T_MONEDAS WHERE NOMBRE = @PDESCMONEDA2),
		@PNEXTTC,
		(SELECT CODIGO FROM T_INDICEECONOMICOS WHERE DESCRIPCION = 'DOLAR RESPECTO AL COLON'),
		(SELECT CODIGO FROM T_ESTADOSTIPOCAMBIOS WHERE NOMBRE = 'P'),
		@NEWFECHA
	);
END
GO

-- PROYECTA EL TIPO DE CAMBIO PARA N CANTIDAD DE MESES A PARTIR
-- DE LA FECHA DE INICIO ESPECIFICADA TOMANDO EN CUENTA M CANTIDAD
-- DE MESES COMO VALORES REALES
-- NO ES LLAMADO POR OTROS SP Y SI REQUIERE EJECUCION DIRECTA!
IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'SP_PROYECCIONTCNMESES')
DROP PROCEDURE SP_PROYECCIONTCNMESES
GO
CREATE PROCEDURE SP_PROYECCIONTCNMESES
	@PDATESTART DATE,
	@PNUMMESES NUMERIC,
	@PNUMVALREALES NUMERIC
AS
	DECLARE @CONTA NUMERIC(10);
	DECLARE @PMONTO NUMERIC(17,2);
	DECLARE @NEWFECHA DATE;
BEGIN
	SET @CONTA = 0;
	SET @PMONTO = 0;
	WHILE (@CONTA < @PNUMMESES)
	BEGIN
		-- INCREMENTA UN MES
		SELECT @NEWFECHA = DATEADD(MONTH, @CONTA, @PDATESTART);
		-- CALCULA EL TC PARA ESE MES
		EXEC SP_PROYECCIONTC1MES @PNUMVALREALES, @NEWFECHA, 'DOLAR', 'COLON', @PMONTO OUTPUT;
		SET @CONTA = @CONTA + 1;
	END
END
GO

-- GENERA PRECIOS PROYECTADOS PARA LOS ARTICULOS QUE FORMAN PARTE DE
-- UNA LISTA DE PRECIOS TOMANDO EN CUENTA LOS TIPOS DE CAMBIO REGISTRADOS
-- LA GENERACION SE HACE A PARTIR DE LA FECHA ACTUAL DEL SISTEMA
-- NO ES LLAMADO POR OTROS SP Y SI REQUIERE EJECUCION DIRECTA
IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'SP_PROYECCIONGENERAR')
DROP PROCEDURE SP_PROYECCIONGENERAR
GO
CREATE PROCEDURE SP_PROYECCIONGENERAR
	@PDESCLISTAPRECIO VARCHAR(40),
	@PNUMMESES NUMERIC,
	@PRESP VARCHAR OUTPUT
AS
-- Define variables utilizadas para los calculos
    DECLARE @PORC1 NUMERIC(3);
    DECLARE @PORC2 NUMERIC(3);
    DECLARE @PORC3 NUMERIC(3);
    DECLARE @SUMPORC NUMERIC(3);
    DECLARE @SBTPORC NUMERIC(17,2);
    DECLARE @CODIARTICULO VARCHAR(20);
	DECLARE @PRECARTICULO NUMERIC(17,2);
	
    DECLARE @MONTOTC NUMERIC;
    DECLARE @SBTPRECIOART NUMERIC(17,2);
    DECLARE @TPRECIOART NUMERIC(17,2);
    DECLARE @PFECHA DATE;
    DECLARE @CONTA NUMERIC(5);
    DECLARE @NEWFECHA DATE;
    DECLARE @FECHAACTUAL DATE;
    -- OBTENER LOS PRECIOS DE LOS ARTICULOS ASOCIADOS A LA LISTA DE PRECIOS 
    -- CURSOR DE PRECIO DE ARTICULOS
	DECLARE CURPRECIOARTIC CURSOR
		FOR SELECT 
				LPA.CODARTICULO,
				A.PRECIOMERCDOLARES
			FROM ((T_LISTAPRECIOXARTICULOS LPA INNER JOIN T_LISTAPRECIOS LP 
					ON LPA.CODLISTAPRECIO = LP.CODIGO) INNER JOIN T_ARTICULOS A
					ON LPA.CODARTICULO = A.CODIGO)
			WHERE LP.DESCRIPCION = @PDESCLISTAPRECIO;
BEGIN
	-- OBTENER LOS PORCENTAJES DE LA LISTA DE PRECIO
	SELECT
		@PORC1 = LP.GASTOADMIN, @PORC2 = LP.GASTOOTROS, @PORC3 = LP.UTILIDAD
	FROM T_LISTAPRECIOS LP
	WHERE LP.DESCRIPCION = @PDESCLISTAPRECIO;
	-- CALCULAR TOTAL DE PORCENTAJES
    SET @SUMPORC = @PORC1 + @PORC2 + @PORC3;
    SET @SBTPORC = @SUMPORC / 100;
    SET @SBTPORC = @SBTPORC + 1;
    
	-- PARA CADA ARTICULO EN EL CURSOR, CALCULAR SU PRECIO
	OPEN CURPRECIOARTIC
	FETCH NEXT FROM CURPRECIOARTIC INTO @CODIARTICULO, @PRECARTICULO;
	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @CONTA = 0;
		-- INICIALIZA CALCULO DE PRECIO PARA LA CANTIDAD DE MESES ESPECIFICADA
        SET @FECHAACTUAL = GETDATE();
		WHILE (@CONTA < @PNUMMESES)
        BEGIN
			-- INCREMENTA UN MES
			SELECT @NEWFECHA = DATEADD(MONTH, @CONTA, GETDATE());
			-- OBTENER EL MONTO DE TIPO DE CAMBIO PARA ESE MES
			EXEC SP_OBTENERTC @NEWFECHA, @MONTOTC OUTPUT;

			print(@Montotc);

			-- CALCULAR SUBTOTAL DEL PRECIO DEL ARTICULO
			SET @SBTPRECIOART = @MONTOTC * @PRECARTICULO;
			-- CALCULAR TOTAL DEL PRECIO DEL ARTICULO (APLICA PORCENTAJES)
			SET @TPRECIOART = @SBTPRECIOART * (1 + @SBTPORC);
			
			INSERT INTO T_ProyeccionesListaPrecios(codArticulo, codListaPrecios, tipoCambioProyect, precioMercDolaresProyect, fecha) VALUES 
				(@CODIARTICULO,(SELECT CODIGO FROM T_LISTAPRECIOS WHERE DESCRIPCION = @PDESCLISTAPRECIO),@MONTOTC,@TPRECIOART,@NEWFECHA);

			-- SIGUE CON EL SIGUIENTE MES DEL MISMO ARTICULO
			SET @CONTA = @CONTA + 1;
        END

		FETCH NEXT FROM CURPRECIOARTIC INTO @CODIARTICULO, @PRECARTICULO;
	END
	CLOSE CURPRECIOARTIC;
	DEALLOCATE CURPRECIOARTIC;
	
END
GO

-- --------------------------------------------------------------------------------------
-- --------------------------------------------------------------------------------------
-- --------------------------------------------------------------------------------------
